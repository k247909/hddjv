name: secure-rdp

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: 🧩 إعداد بيئة العمل
      run: |
        Write-Host "🔧 بدء الإعداد..."
        mkdir $env:PERSISTENT_DIR -Force
        Write-Host "📁 تم إنشاء مجلد البيانات الدائمة."
      shell: powershell
      env:
        PERSISTENT_DIR: C:\Users\TOOLBOXLAP\PersistentData

    - name: 🛡️ تثبيت Tailscale
      run: |
        $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
        $tsPath = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest $tsUrl -OutFile $tsPath -UseBasicParsing
        Start-Process msiexec.exe -Wait -ArgumentList "/i `"$tsPath`" /qn"
        Write-Host "✅ تم تثبيت Tailscale بنجاح."
      shell: powershell

    - name: 🧰 تثبيت AnyDesk مع معالجة ذكية للأخطاء
      run: |
        Write-Host "🚀 بدء تثبيت AnyDesk..."

        $ErrorActionPreference = "Continue"
        $logFile = "C:\Users\TOOLBOXLAP\PersistentData\AnyDeskPath.txt"
        if (!(Test-Path "C:\Users\TOOLBOXLAP\PersistentData")) {
            New-Item -ItemType Directory -Path "C:\Users\TOOLBOXLAP\PersistentData" | Out-Null
        }

        function Test-ADExe {
            param($path)
            return (Test-Path $path)
        }

        # --- المحاولة 1: تحميل مباشر من الموقع الرسمي ---
        try {
            $url = "https://download.anydesk.com/AnyDesk.exe"
            $output = "$env:TEMP\AnyDesk.exe"
            Write-Host "⬇️ محاولة تنزيل AnyDesk من الموقع الرسمي..."
            Invoke-WebRequest $url -OutFile $output -UseBasicParsing -ErrorAction Stop
            if (Test-ADExe $output) {
                Write-Host "✅ تم تنزيل AnyDesk مباشرة."
                $ADExePath = $output
            }
        } catch {
            Write-Warning "⚠ فشل التنزيل المباشر. سيتم استخدام winget/choco."
        }

        # --- المحاولة 2: Winget ---
        if (-not (Test-Path $ADExePath)) {
            try {
                Write-Host "💿 محاولة تثبيت AnyDesk عبر Winget..."
                winget install --id AnyDeskSoftwareGmbH.AnyDesk -e --accept-source-agreements --accept-package-agreements -h
            } catch {
                Write-Warning "⚠ Winget فشل. الانتقال إلى Chocolatey."
            }
        }

        # --- المحاولة 3: Chocolatey ---
        if (-not (Test-Path $ADExePath)) {
            try {
                Write-Host "🍫 محاولة تثبيت AnyDesk عبر Chocolatey..."
                choco install anydesk -y --force
            } catch {
                Write-Warning "⚠ فشل Chocolatey."
            }
        }

        # --- التحقق من المسارات الشائعة بعد التثبيت ---
        Write-Host "🔍 فحص المسارات الممكنة لـ AnyDesk..."
        $ADExePath = $null
        $possiblePaths = @(
            "C:\ProgramData\chocolatey\bin\AnyDesk.exe",
            "C:\ProgramData\chocolatey\lib\anydesk.portable\tools\AnyDesk.exe",
            "C:\ProgramData\chocolatey\lib\anydesk\tools\AnyDesk.exe",
            "$env:ProgramFiles\AnyDesk\AnyDesk.exe",
            "$env:ProgramFiles(x86)\AnyDesk\AnyDesk.exe",
            "$env:LocalAppData\Programs\AnyDesk\AnyDesk.exe"
        )

        foreach ($p in $possiblePaths) {
            if (Test-ADExe $p) {
                Write-Host "✅ تم العثور على AnyDesk في: $p"
                $ADExePath = $p
                break
            }
        }

        # --- بحث عميق لو لم يتم العثور ---
        if (-not $ADExePath) {
            Write-Host "🧭 بحث شامل في مجلد Chocolatey..."
            $found = Get-ChildItem "C:\ProgramData\chocolatey" -Filter "AnyDesk.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
            if ($found) {
                $ADExePath = $found.FullName
                Write-Host "✅ تم العثور على AnyDesk في: $ADExePath"
            }
        }

        # --- معالجة الفشل النهائي ---
        if (-not $ADExePath) {
            Write-Error "❌ فشل تحديد موقع AnyDesk بعد التثبيت. العملية توقفت."
            exit 1
        }

        # --- تسجيل المسار في ملف نصي ---
        Write-Host "📝 تسجيل المسار في $logFile"
        "AnyDeskPath=$ADExePath" | Out-File -FilePath $logFile -Encoding UTF8 -Force

        # --- إعداد كلمة المرور وID ---
        try { & "$ADExePath" --set-password $env:ANYDESK_PASS } catch { Write-Warning "⚠ فشل تعيين كلمة المرور." }
        Start-Sleep -Seconds 5
        try {
            $id = & "$ADExePath" --get-id
            if ($id) {
                echo "ANYDESK_ID=$id" | Out-File -FilePath $env:GITHUB_ENV -Append
                Write-Host "🆔 AnyDesk ID: $id"
            } else {
                Write-Warning "⚠ لم يتم إرجاع AnyDesk ID."
            }
        } catch {
            Write-Warning "⚠ فشل استرجاع ID."
        }

        Write-Host "🎯 تم التثبيت والإعداد بنجاح."
      shell: powershell
      env:
        ANYDESK_PASS: "123456"

    - name: ✅ إنهاء العملية
      run: |
        Write-Host "🎉 كل شيء تم بنجاح! AnyDesk جاهز للعمل."
        Get-Content "C:\Users\TOOLBOXLAP\PersistentData\AnyDeskPath.txt"
      shell: powershell
