# SHADOWHACKER-GOD: RDP Workflow (RustDesk MSI FIXED)
# Fast & Stable RustDesk Setup - No Freeze, No GUI required

name: AEON-RDP-RUSTDESK-MSI-STABLE

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - uses: actions/checkout@v3

    - name: Setup Environment Variables
      run: |
        Write-Host "--- Loading Environment Variables ---"
        echo "RUSTDESK_PASS=${{ secrets.RUSTDESK_PASSWORD }}" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "RD_VERSION=1.2.6" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: powershell

    # ‚úÖ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÖŸÑŸÅ MSI ÿ®ÿØŸÑ EXE (ŸÑÿ™ÿ¨ŸÜÿ® ÿßŸÑÿ™ÿπŸÑŸäŸÇ)
    - name: Install RustDesk Silently (MSI Method)
      run: |
        Write-Host "=== Installing RustDesk (MSI Method) ==="
        $version = $env:RD_VERSION
        $msiUrl = "https://github.com/rustdesk/rustdesk/releases/download/$version/rustdesk-$version-x86_64.msi"
        $msiPath = "$env:TEMP\rustdesk-$version-x86_64.msi"
        
        Write-Host "Downloading RustDesk MSI..."
        Invoke-WebRequest -Uri $msiUrl -OutFile $msiPath -UseBasicParsing
        
        Write-Host "Running MSI silent install..."
        Start-Process "msiexec.exe" -ArgumentList "/i", "`"$msiPath`"", "/qn", "/norestart" -Wait
        
        # ÿßŸÑÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿßÿ± ÿßŸÑÿ™ŸÜŸÅŸäÿ∞Ÿä
        $exePath = "$env:ProgramFiles\RustDesk\rustdesk.exe"
        if (-not (Test-Path $exePath)) {
          Write-Error "CRITICAL: RustDesk installation failed or path not found."
          exit 1
        }

        echo "RUSTDESK_EXE=$exePath" | Out-File -FilePath $env:GITHUB_ENV -Append
        Write-Host "‚úÖ RustDesk installed successfully at $exePath"
      shell: powershell

    # üß† ÿ™ÿ£ŸÉŸäÿØ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿÆÿØŸÖÿ© ŸàÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ÿßŸÑŸÄID
    - name: Configure RustDesk & Retrieve ID
      run: |
        Write-Host "=== Configuring RustDesk Unattended Access ==="
        $exe = $env:RUSTDESK_EXE
        $pass = $env:RUSTDESK_PASS

        if (-not (Test-Path $exe)) {
          Write-Error "‚ùå RustDesk executable not found."
          exit 1
        }

        Write-Host "Setting permanent password..."
        & $exe --password $pass
        Start-Sleep -Seconds 10

        Write-Host "Retrieving RustDesk ID..."
        $id = $null
        for ($i=1; $i -le 20; $i++) {
          $out = & $exe --get-id 2>$null
          if ($out -match '^\d{9}$') { $id = $out.Trim(); break }
          Write-Host "Attempt $i/20 waiting for ID..."
          Start-Sleep -Seconds 5
        }

        if (-not $id) {
          Write-Error "‚ö†Ô∏è Could not retrieve RustDesk ID after multiple tries."
          exit 1
        }

        echo "RUSTDESK_ID=$id" | Out-File -FilePath $env:GITHUB_ENV -Append
        Write-Host "‚úÖ RustDesk ID: $id"
      shell: powershell

    # ÿπÿ±ÿ∂ ÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿßÿ™ÿµÿßŸÑ
    - name: Display Connection Info
      run: |
        Write-Host "----------------------------------------------"
        Write-Host "  üõ∞Ô∏è  RustDesk Remote Access Info"
        Write-Host "----------------------------------------------"
        Write-Host "ID: $env:RUSTDESK_ID"
        Write-Host "Password: ${{ secrets.RUSTDESK_PASSWORD }}"
        Write-Host "----------------------------------------------"
        Write-Host "Use RustDesk on your PC to connect remotely!"
      shell: powershell

    # ÿ•ÿ®ŸÇÿßÿ° ÿßŸÑÿ¨ŸÑÿ≥ÿ© ŸÖŸÅÿ™Ÿàÿ≠ÿ©
    - name: Keep Alive Session (5h)
      run: |
        Write-Host "Keeping session alive for 5 hours..."
        Start-Sleep -Seconds 18000
      shell: powershell
